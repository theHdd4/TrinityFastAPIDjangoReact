1. Update `TrinityBackendDjango/.env` with the following variables:
   - `ALLOWED_HOSTS=*` to accept requests from any domain.
   - `CSRF_TRUSTED_ORIGINS=https://your-domain.com` so Django accepts form posts when proxied through Cloudflare.
2. Rebuild and start the stack:
   ```bash
   cd TrinityBackendDjango
   docker-compose up -d --build
   ```
3. Configure your Cloudflare tunnel to point to the frontend container on port `8080` and expose port `8000` for the Django API.
4. Update `TrinityFrontend/.env` so the `VITE_*` variables (or `VITE_BACKEND_ORIGIN`) use the external domain for the backend. Also set `FRONTEND_URL` in `TrinityBackendDjango/.env` to the same domain.
5. After rebuilding and restarting the containers you should be able to log in and add users or clients from any IP address via the tunneled domain.

