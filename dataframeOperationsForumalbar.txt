DataFrame Operations Atom – Formula Bar API Usage
=================================================

Overview
--------
The DataFrame Operations atom exposes an enhanced formula bar that sits directly above the grid. The bar shows the active cell reference, the pending target column, and provides quick access to formula helpers. Use the Σ button to toggle formula mode, the calculator icon to open the usage guide for the current formula, and the library button to browse categorized helpers. Apply runs the current expression through the dataframe operations API while Cancel resets the selections.【F:TrinityFrontend/src/components/AtomList/atoms/dataframe-operations/components/FormularBar.tsx†L200-L314】

Column & Formula Input
----------------------
* Click a header to set the column that should receive the results or pick one from the usage guide’s column selector; the Apply button stays disabled until a column and non-empty formula are present.【F:TrinityFrontend/src/components/AtomList/atoms/dataframe-operations/components/FormularBar.tsx†L210-L287】【F:TrinityFrontend/src/components/AtomList/atoms/dataframe-operations/components/DataFrameOperationsCanvas.tsx†L787-L808】
* Typing a value that starts with `=` automatically flips the bar into formula mode. Escape clears the state and closes the helpers.【F:TrinityFrontend/src/components/AtomList/atoms/dataframe-operations/components/FormularBar.tsx†L259-L287】【F:TrinityFrontend/src/components/AtomList/atoms/dataframe-operations/components/FormularBar.tsx†L241-L257】

Formula Library & Usage Guide
-----------------------------
* The **Library** popover groups formulas into mathematical, statistical, logical, text, date, mapping, and null-handling tabs and supports fuzzy search. Selecting an item injects the example expression and highlights the category so you can continue editing.【F:TrinityFrontend/src/components/AtomList/atoms/dataframe-operations/components/FormularBar.tsx†L90-L192】【F:TrinityFrontend/src/components/AtomList/atoms/dataframe-operations/components/FormularBar.tsx†L307-L346】
* The calculator icon opens a usage guide for the active formula showing syntax, description, and a live column picker. Use the Command list to change the destination column or tap the column badges to insert references into the formula body.【F:TrinityFrontend/src/components/AtomList/atoms/dataframe-operations/components/FormularBar.tsx†L214-L302】
* Quick helpers remain available below the bar so common expressions such as `=SUM(colA,colB)`, `=IF(colA > 10, colB, colC)`, `=DATE_DIFF(colEnd, colStart)`, and `=FILLNA(colA, 0)` are one click away.【F:TrinityFrontend/src/components/AtomList/atoms/dataframe-operations/components/FormularBar.tsx†L348-L361】

Available Operations
--------------------
The library lists the existing math, correlation, and aggregation helpers alongside the requested additions (IF variants, LOWER/UPPER, LEN, `SUBSTR`, `STR_REPLACE`, `DATE_DIFF`, `ABS`, `ROUND`, `FLOOR`, `CEIL`, `EXP`, `LOG`, `SQRT`, exponentiation, `BIN`, `MAP`, `ISNULL`, and `FILLNA`). Each operation’s syntax, description, and example appear in both the library cards and the usage guide for quick reference.【F:TrinityFrontend/src/components/AtomList/atoms/dataframe-operations/components/FormularBar.tsx†L52-L188】

Backend Evaluation
------------------
Submitting a formula triggers `POST /apply_formula` with the dataframe session id, the selected column, and the trimmed formula string. The backend replaces column references with row values, evaluates the expression with the vetted helper functions, writes the computed series back into the dataframe, and returns the refreshed payload to the UI.【F:TrinityBackendFastAPI/app/features/dataframe_operations/app/routes.py†L596-L640】【F:TrinityFrontend/src/components/AtomList/atoms/dataframe-operations/components/DataFrameOperationsCanvas.tsx†L787-L808】

Execution Example
-----------------
Applying `=IF(colA > 10, colB, colC)` against column `Result` results in the following payload:

```json
POST /apply_formula
{
  "df_id": "<session-id>",
  "target_column": "Result",
  "formula": "=IF(colA > 10, colB, colC)"
}
```

The backend substitutes each row’s `colA`, `colB`, and `colC` values, evaluates the IF expression with the registered helpers, and returns the updated dataframe payload to the UI.【F:TrinityBackendFastAPI/app/features/dataframe_operations/app/routes.py†L596-L640】
