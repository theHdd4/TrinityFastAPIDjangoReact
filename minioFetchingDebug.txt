The backend and AI services load environment variables from the repository's
``.env`` files and from Redis on startup.  ``DataStorageRetrieval.arrow_client``
reads the ``.env`` file on import using ``python-dotenv`` and exposes a helper
``load_env_from_redis()`` that should be called once during application start-up
so ``CLIENT_NAME``, ``APP_NAME`` and ``PROJECT_NAME`` are pulled from Redis.
These names are then used to build the correct MinIO object prefix.

To determine the current MinIO prefix you can call:

```python
from DataStorageRetrieval.arrow_client import get_current_names, get_minio_prefix

client, app, project = get_current_names()
prefix = get_minio_prefix()  # "<client>/<app>/<project>/"
```

Any service may combine this prefix with the MinIO bucket name (default
"trinity") to fetch or store objects:

```python
object_name = f"{prefix}my_dataframe.arrow"
minio_client.get_object("trinity", object_name)
```
